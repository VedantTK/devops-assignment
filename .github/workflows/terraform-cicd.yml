name: Terraform CI/CD with Key Vault

on:
  push:
    branches:
      - staging
  workflow_dispatch:  # Allows manual run for production

jobs:
  # -------------------------------
  # Job 1: Staging deployment (auto)
  # -------------------------------
  staging:
    name: Terraform Deploy - Staging
    runs-on: ubuntu-latest

    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      AZURE_DEFAULT_REGION: "East US"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Azure CLI
        uses: azure/CLI@v1
        with:
          azcliversion: latest

      - name: Azure Login
        run: |
          az login --service-principal \
            -u $ARM_CLIENT_ID \
            -p $ARM_CLIENT_SECRET \
            --tenant $ARM_TENANT_ID

      - name: Fetch secrets from Key Vault
        id: keyvault
        run: |
          COSMOS_DB_KEY=$(az keyvault secret show --vault-name "kv-${{ github.repository }}" --name "cosmosdb-key" --query value -o tsv)
          STORAGE_ACCOUNT_KEY=$(az keyvault secret show --vault-name "kv-${{ github.repository }}" --name "storage-account-key" --query value -o tsv)

          # Mask secrets in logs
          echo "::add-mask::$COSMOS_DB_KEY"
          echo "::add-mask::$STORAGE_ACCOUNT_KEY"

          echo "COSMOS_DB_KEY=$COSMOS_DB_KEY" >> $GITHUB_ENV
          echo "STORAGE_ACCOUNT_KEY=$STORAGE_ACCOUNT_KEY" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Select/Create Workspace (staging)
        run: terraform workspace select staging || terraform workspace new staging

      - name: Terraform Plan
        run: terraform plan \
          -var "cosmos_db_key=${COSMOS_DB_KEY}" \
          -var "storage_account_key=${STORAGE_ACCOUNT_KEY}" \
          -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

  # ----------------------------------
  # Job 2: Production deployment (manual)
  # ----------------------------------
  production:
    name: Terraform Deploy - Production
    runs-on: ubuntu-latest
    needs: staging
    environment: production   # Manual approval required in GitHub

    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      AZURE_DEFAULT_REGION: "East US"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Azure CLI
        uses: azure/CLI@v1
        with:
          azcliversion: latest

      - name: Azure Login
        run: |
          az login --service-principal \
            -u $ARM_CLIENT_ID \
            -p $ARM_CLIENT_SECRET \
            --tenant $ARM_TENANT_ID

      - name: Fetch secrets from Key Vault
        id: keyvault
        run: |
          COSMOS_DB_KEY=$(az keyvault secret show --vault-name "kv-${{ github.repository }}" --name "cosmosdb-key" --query value -o tsv)
          STORAGE_ACCOUNT_KEY=$(az keyvault secret show --vault-name "kv-${{ github.repository }}" --name "storage-account-key" --query value -o tsv)

          # Mask secrets
          echo "::add-mask::$COSMOS_DB_KEY"
          echo "::add-mask::$STORAGE_ACCOUNT_KEY"

          echo "COSMOS_DB_KEY=$COSMOS_DB_KEY" >> $GITHUB_ENV
          echo "STORAGE_ACCOUNT_KEY=$STORAGE_ACCOUNT_KEY" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Select/Create Workspace (production)
        run: terraform workspace select production || terraform workspace new production

      - name: Terraform Plan
        run: terraform plan \
          -var "cosmos_db_key=${COSMOS_DB_KEY}" \
          -var "storage_account_key=${STORAGE_ACCOUNT_KEY}" \
          -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
